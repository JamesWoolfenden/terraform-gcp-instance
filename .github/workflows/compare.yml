---
# yamllint disable rule:line-length
name: Compare
on:
  schedule:
    - cron: '00 7 * * SAT'
  workflow_dispatch:

env:
  tf_target_dir: example/examplea
  branch: main
jobs:
  tfsec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: ${{ env.branch }}
          token: ${{ github.token }}
      - name: tfsec
        run: |
          pip3 install lastversion
          lastversion tfsec/tfsec --assets -d
          chmod +x tfsec-linux-amd64
          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json
        continue-on-error: true
      - name: store
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: tfsec
          path: tfsec.json
          if-no-files-found: error
  checkov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: ${{ env.branch }}
          token: ${{ github.token }}
      - name: install checkov
        run: |
          pip3 install checkov
      - name: run checkov
        run: checkov -d  ${{ env.tf_target_dir }} -o json | tee checkov.json
        continue-on-error: true
      - name: store
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: checkov
          path: checkov.json
          if-no-files-found: error
  terrascan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: ${{ env.branch }}
          token: ${{ github.token }}
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.8
      - name: install terrascan
        run: |
          pip3 install lastversion
          lastversion accurics/terrascan --assets -d --verbose
          tar -xvf terrascan*.tar.gz
          chmod +x ./terrascan
      - name: run terrascan
        run: |
          ./terrascan init
          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json
        continue-on-error: true
      - name: store
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: terrascan
          path: terrascan.json
          if-no-files-found: warn
  kics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: ${{ env.branch }}
          token: ${{ github.token }}
      - name: install kics
        run: |
          pip3 install lastversion
          lastversion Checkmarx/kics --assets -d --verbose
          tar -xvf kics*.tar.gz
      - name: run kics
        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json
        continue-on-error: true
      - name: store
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: kics
          path: kics.json
          if-no-files-found: warn

  upload:
    needs: [kics, terrascan, checkov, tfsec]
    runs-on: ubuntu-latest
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@36103bd8a8b98bf8380c8e704e73c09b2fd8d98e # v2.0
        with:
          timeZone: 8
          format: "YYYY-MM-DD-HH-mm-ss"
      - name: mkdir
        run: |
          mkdir  tos3
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          path: tos3
      - uses: jakejarvis/s3-sync-action@be0c4ab89158cac4278689ebedd8407dd5f35a83 # v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: compare-data-680235478471
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}
          AWS_REGION: "eu-west-2"
          SOURCE_DIR: tos3
          DEST_DIR: ${{ github.repository }}/${{ steps.time.outputs.time }}
